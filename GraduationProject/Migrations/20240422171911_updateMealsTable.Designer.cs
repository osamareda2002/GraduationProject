// <auto-generated />
using System;
using GraduationProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GraduationProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240422171911_updateMealsTable")]
    partial class updateMealsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GraduationProject.Models.Breakfast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Calories")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Breakfasts");
                });

            modelBuilder.Entity("GraduationProject.Models.DailyActivity", b =>
                {
                    b.Property<int>("traineeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("traineeId", "date");

                    b.ToTable("DailyActivity");
                });

            modelBuilder.Entity("GraduationProject.Models.Dinner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Calories")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dinners");
                });

            modelBuilder.Entity("GraduationProject.Models.Food", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodId"));

                    b.Property<double>("Calories")
                        .HasColumnType("float");

                    b.Property<string>("FoodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MealId")
                        .HasColumnType("int");

                    b.HasKey("FoodId");

                    b.HasIndex("MealId");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("GraduationProject.Models.FoodEaten", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("DailyActivitydate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DailyActivitytraineeId")
                        .HasColumnType("int");

                    b.Property<int>("foodId")
                        .HasColumnType("int");

                    b.Property<double>("quantity")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("DailyActivitytraineeId", "DailyActivitydate");

                    b.ToTable("FoodEatens");
                });

            modelBuilder.Entity("GraduationProject.Models.FoodReport", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<DateTime>("DateOfOccurrence")
                        .HasColumnType("datetime2");

                    b.Property<int>("TraineeId")
                        .HasColumnType("int");

                    b.Property<int>("foodId")
                        .HasColumnType("int");

                    b.Property<double>("quantity")
                        .HasColumnType("float");

                    b.HasKey("ReportId");

                    b.ToTable("FoodReports");
                });

            modelBuilder.Entity("GraduationProject.Models.Fruit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fruits");
                });

            modelBuilder.Entity("GraduationProject.Models.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("GraduationProject.Models.Snack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Calories")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Snacks");
                });

            modelBuilder.Entity("GraduationProject.Models.Sport", b =>
                {
                    b.Property<int>("SportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SportId"));

                    b.Property<double>("CaloreisPerKg")
                        .HasColumnType("float");

                    b.Property<string>("SportName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SportId");

                    b.ToTable("Sports");
                });

            modelBuilder.Entity("GraduationProject.Models.SportDone", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("DailyActivitydate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DailyActivitytraineeId")
                        .HasColumnType("int");

                    b.Property<double>("duration")
                        .HasColumnType("float");

                    b.Property<int>("sportId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("DailyActivitytraineeId", "DailyActivitydate");

                    b.ToTable("SportDones");
                });

            modelBuilder.Entity("GraduationProject.Models.SportReport", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<DateTime>("DateOfOccurrence")
                        .HasColumnType("datetime2");

                    b.Property<double>("DurationTime")
                        .HasColumnType("float");

                    b.Property<int>("TraineeId")
                        .HasColumnType("int");

                    b.Property<int>("sportId")
                        .HasColumnType("int");

                    b.HasKey("ReportId");

                    b.ToTable("SportReports");
                });

            modelBuilder.Entity("GraduationProject.Models.Trainee", b =>
                {
                    b.Property<int>("TraineeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TraineeId"));

                    b.Property<string>("AvailabaleDays")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FitnessLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RequiredCalories")
                        .HasColumnType("int");

                    b.Property<string>("TraineeFoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TraineeSports")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.HasKey("TraineeId");

                    b.ToTable("Trainees");
                });

            modelBuilder.Entity("GraduationProject.Models.Vegetable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vegetables");
                });

            modelBuilder.Entity("GraduationProject.Models.WeekDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WeekDays");
                });

            modelBuilder.Entity("GraduationProject.Models.Food", b =>
                {
                    b.HasOne("GraduationProject.Models.Meal", null)
                        .WithMany("Ingrediants")
                        .HasForeignKey("MealId");
                });

            modelBuilder.Entity("GraduationProject.Models.FoodEaten", b =>
                {
                    b.HasOne("GraduationProject.Models.DailyActivity", null)
                        .WithMany("dailyFoodEaten")
                        .HasForeignKey("DailyActivitytraineeId", "DailyActivitydate");
                });

            modelBuilder.Entity("GraduationProject.Models.SportDone", b =>
                {
                    b.HasOne("GraduationProject.Models.DailyActivity", null)
                        .WithMany("dailySportDone")
                        .HasForeignKey("DailyActivitytraineeId", "DailyActivitydate");
                });

            modelBuilder.Entity("GraduationProject.Models.DailyActivity", b =>
                {
                    b.Navigation("dailyFoodEaten");

                    b.Navigation("dailySportDone");
                });

            modelBuilder.Entity("GraduationProject.Models.Meal", b =>
                {
                    b.Navigation("Ingrediants");
                });
#pragma warning restore 612, 618
        }
    }
}
